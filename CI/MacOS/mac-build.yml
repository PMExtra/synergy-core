steps:
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'AppleSigningCert.cer'
      certPwd: '$(AppleCertPass)'
      keychain: 'temp'
    condition: eq(variables['Build.Reason'], 'Manual')

  - task: CmdLine@2
    inputs:
      script: 'brew install qt5'
    displayName: 'Installing QT'

  - task: CmdLine@2
    inputs:
      script: 'pip install dmgbuild'
    displayName: 'Installing dmgbuild'

  - task: CmdLine@2
    inputs:
      script: |
        export PATH="$(QT_PATH):$PATH"
        mkdir build
        cd build
        cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=$(version) -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CONFIGURATION_TYPES=Release ..
    displayName: 'Cmake standard'
    condition: eq(variables['buildType'], 'standard')
    env:
      GIT_COMMIT: $(Build.SourceVersion)

  - task: CmdLine@2
    inputs:
      script: |
        export PATH="$(QT_PATH):$PATH"
        export SYNERGY_ENTERPRISE=1
        mkdir build
        cd build
        cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=10.12 -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CONFIGURATION_TYPES=Release -DSYNERGY_ENTERPRISE=ON ..
    displayName: 'Cmake enterprise'
    condition: eq(variables['buildType'], 'enterprise')
    env:
      GIT_COMMIT: $(Build.SourceVersion)

  - task: CmdLine@2
    inputs:
      script: |
        cd build
        . ./version
        make -j
        make install/strip
    displayName: 'Compiling'
    env:
      GIT_COMMIT: $(Build.SourceVersion)

